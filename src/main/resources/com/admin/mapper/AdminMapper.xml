<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.admin.mapper.AdminMapper">

    <!-- 검색어(유저닉네임) 있을시 실행 -->
    <sql id="search">
        <if test="searchOpt!=null">
            <trim prefix=" " suffix=" ">
                <choose>
                    <when test="searchOpt == 'I'.toString()">
                        u_id like '%'||#{searchStr}||'%' and
                    </when>
                    <when test="searchOpt == 'N'.toString()">
                        u_nick like '%'||#{searchStr}||'%' and
                    </when>
                </choose>
            </trim>
        </if>
    </sql>

    <resultMap type="com.member.domain.MemberDTO" id="memberMap">
        <id property="id" column="u_id"/> <!-- primary key 지정 -->
        <result property="id" column="u_id"/>
        <result property="pw" column="u_pw"/>
        <result property="phone" column="u_phone"/>
        <result property="name" column="u_nick"/>
        <result property="reg" column="u_reg"/>
        <result property="status" column="u_status"/>
        <result property="pic" column="u_pic"/>
        <result property="point" column="u_point"/>
        <result property="membership" column="ms_membership"/>
        <result property="sns" column="u_sns"/>
        <result property="snsToken" column="u_snsToken"/>
        <collection property="authDTOList" resultMap="authMap"></collection>
    </resultMap>
    <!-- 권한 테이블 값을 AuthDTO 클래스에 대입하는 것 명확히 정의 -->
    <resultMap type="com.member.domain.AuthDTO" id="authMap">
        <result property="id" column="id"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <select id="getUserCount" resultType="_int">
        SELECT COUNT(*)
        FROM user_list
    </select>

    <select id="getSalesCount" resultType="_int">
        SELECT COUNT(*)
        FROM BUY
    </select>

    <select id="getRecentGalleryCount" resultType="_int">
        select count(*)
        from GALLERY
        where g_REG >= to_char(SYSDATE - 1, 'YYYYMMDD')
    </select>
    <!--    where g_REG >= to_char(SYSDATE-1,'DD-MM-YY')-->

    <select id="getRecentBlogCount" resultType="_int">
        select count(*)
        from blog
        where b_REG >= to_char(SYSDATE - 1, 'YYYYMMDD')
    </select>
    <!--    where b_REG >= to_char(SYSDATE - 1, 'DD-MM-YY')-->

    <!--    <select id="getMemberDTOList" resultType="com.member.domain.MemberDTO">-->
    <select id="getMemberDTOList" resultMap="memberMap">
        select *
        from user_list
        order by u_reg desc
    </select>

    <select id="getMemberDTOList_WithPaging" resultMap="memberMap">
        select u_id, u_pw, u_phone, u_nick, u_reg, u_status, u_pic, u_point, ms_membership, u_sns, u_snstoken from
        (select rownum r, u_id, u_pw, u_phone, u_nick, u_reg, u_status, u_pic, u_point, ms_membership, u_sns, u_snstoken
        from USER_LIST where
        <include refid="search"></include>
        <![CDATA[
             rownum <= #{pageNum}*#{listQty})
        where r > (#{pageNum}-1)*#{listQty}
       ]]>
        <choose>
            <when test='sortOption eq "latest".toString()'>
                order by u_reg desc
            </when>
            <when test='sortOption eq "oldest".toString()'>
                order by u_reg asc
            </when>
            <when test='sortOption eq "memberShip".toString()'>
                order by ms_membership desc, u_reg desc
            </when>
            <when test='sortOption eq "status".toString()'>
                order by u_status desc, u_reg desc
            </when>
            <otherwise>
                order by u_reg desc
            </otherwise>
        </choose>
    </select>

    <select id="getUserTotalCount" resultType="_int">
        select count(*)
        from user_list
        <trim prefix=" where" suffixOverrides="and">
            <include refid="search"></include>
        </trim>
    </select>

    <update id="updateMemberShip">
        update user_list
        set ms_membership = #{membership}
        where u_id = #{id}
    </update>

    <update id="updatePoint">
        update user_list
        set u_point = u_point + #{point}
        where u_id = #{id}
    </update>

    <select id="getMemeberINFO" resultType="com.admin.domain.AdminMemberDTO">
        select ul.*,
               au.auth,
               ac.A_ACCOUNT,
               ac.A_BANK,
               ac.A_HOLDER,
               sns.S_INSTAGRAM,
               sns.S_TWITTER,
               sns.S_FACEBOOK,
               sns.S_YOUTUBE,
               ui.U_INTRO
        from USER_LIST ul,
             USER_AUTH au,
             ACCOUNTLIST ac,
             SNS sns,
             USER_INTRO ui
        WHERE ul.U_ID = au.ID(+)
          and ul.U_ID = ac.U_ID(+)
          and ul.U_ID = sns.U_ID(+)
          and UL.U_ID = ui.U_ID(+)
          and UL.U_ID = #{u_id}
    </select>

    <update id="updateUserStatus">
        update user_list
        set u_status = #{status}
        where u_id = #{id}
    </update>

    <select id="getGalleryDTOList_WithPaging" resultType="com.gallery.domain.GalleryDTO">
        select G_NO,
        MT_NAME,
        U_ID,
        G_HNAME,
        G_LNAME,
        G_HPRICE,
        G_LPRICE,
        G_CONTENT,
        G_REG,
        G_EDIT,
        G_SALES,
        G_LIKE,
        G_READCOUNT,
        G_TAG1,
        G_TYPE
        from (select rownum r,
        G_NO,
        MT_NAME,
        U_ID,
        G_HNAME,
        G_LNAME,
        G_HPRICE,
        G_LPRICE,
        G_CONTENT,
        G_REG,
        G_EDIT,
        G_SALES,
        G_LIKE,
        G_READCOUNT,
        G_TAG1,
        G_TYPE from GALLERY
        <include refid="search"></include>
        <![CDATA[
             rownum <= #{pageNum}*#{listQty})
        where r > (#{pageNum}-1)*#{listQty}
       ]]>
    </select>

</mapper>