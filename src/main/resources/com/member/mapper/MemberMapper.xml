<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.member.mapper.MemberMapper">

    <!-- 일반 회원가입 -->
    <insert id="addMember">
        insert into user_list(u_id, u_pw, u_phone, u_nick, u_point, ms_membership, u_reg, u_pic)
        values (#{id}, #{pw}, #{phone}, #{name}, 0, 0, sysdate, 'user.png')
    </insert>
    <!-- 접근 권한 추가 -->
    <insert id="addAuth">
        INSERT INTO user_auth(id, auth)
        VALUES (#{id}, #{auth})
    </insert>

    <!--
    MemberDTO 안에 컬렉션 List가 있으므로 SLEECT 날려서 가져오는 결과를 MemberDTO 안에 바인딩 시키고,
    결과물을 리턴해주기 위해 result(리턴)타입인 MemberDTO타입을 Mybatis에서 잘 처리되도록 새로 정의하기 : resultMap 태그 사용.
    -->
    <!-- 회원정보 테이블의 데이터를 MemberDTO 의 변수에 각각 바인딩되도록 컬럼 - 변수 세트 명확히 정의 -->
    <resultMap type="com.member.domain.MemberDTO" id="memberMap">
        <id property="id" column="u_id"/> <!-- primary key 지정 -->
        <result property="id" column="u_id"/>
        <result property="pw" column="u_pw"/>
        <result property="phone" column="u_phone"/>
        <result property="name" column="u_nick"/>
        <result property="reg" column="u_reg"/>
        <result property="status" column="u_status"/>
        <result property="pic" column="u_pic"/>
        <result property="point" column="u_point"/>
        <result property="membership" column="ms_membership"/>
        <result property="sns" column="u_sns"/>
        <result property="snsToken" column="u_snsToken"/>
        <collection property="authDTOList" resultMap="authMap"></collection>
    </resultMap>
    <!-- 권한 테이블 값을 AuthDTO 클래스에 대입하는 것 명확히 정의 -->
    <resultMap type="com.member.domain.AuthDTO" id="authMap">
        <result property="id" column="id"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <!-- 회원 정보 가져오기 (접근 권한까지) -->
    <select id="getMember" resultMap="memberMap">
        SELECT m.*, a.*
        FROM user_list m,
             user_auth a
        WHERE m.U_ID = a.id
          AND m.U_ID = #{id}
    </select>

    <!-- 회원 정보 수정 -->
    <update id="updateMember">
        UPDATE USER_LIST
        SET U_NICK  = #{name},
            U_PHONE = #{phone}
        WHERE U_ID = #{id}
    </update>

    <!-- 회원 탈퇴 (접근 권한까지) -->
    <delete id="deleteMember">
        DELETE
        FROM USER_LIST
        WHERE U_ID = #{id}
    </delete>
    <delete id="deleteAuth">
        DELETE
        FROM USER_AUTH
        WHERE ID = #{id}
    </delete>

    <!-- 닉네임 중복확인 -->
    <select id="nameCheck" resultType="Integer">
        SELECT COUNT(*)
        FROM USER_LIST
        WHERE U_NICK = #{name}
    </select>

    <!-- 아이디 확인 -->
    <select id="idCheck" resultType="Integer">
        SELECT COUNT(*)
        FROM USER_LIST
        WHERE U_ID = #{id}
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatePw">
        update user_list
        set u_pw = #{pw}
        where u_id = #{id}
    </update>

    <!-- 프로필 사진 변경 -->
    <update id="updateImg">
        update user_list
        set u_pic = #{pic}
        where u_id = #{id}
    </update>

    <!-- 포인트 충전 -->
    <update id="updatePoint">
        update user_list
        set u_point = u_point + #{point}
        where u_id = #{id}
    </update>

    <!-- 갤러리 목록 -->
    <select id="galleryList" resultType="com.gallery.domain.GalleryDTO">
        select G_NO, G_HNAME, U_ID, G_REG, G_HPRICE, G_STATUS
        from GALLERY
        where U_ID = #{id}
        order by G_NO asc
    </select>

    <!-- 갤러리 상태값 변경 (숨김처리) -->
    <update id="updateGalleryStatus1">
        update GALLERY
        set G_STATUS = 2
        where G_NO = #{G_NO}
    </update>

    <!-- 갤러리 상태값 변경 (판매중) -->
    <update id="updateGalleryStatus2">
        update GALLERY
        set G_STATUS = 0
        where G_NO = #{G_NO}
    </update>

    <!-- 장바구니 담기 -->
    <insert id="insertCart">
        insert into USER_CART(C_ID, C_HPRICE, C_HNAME, C_REG, G_NO, U_ID)
        select C_ID_SEQ.nextval,
               G_HPRICE,
               G_HNAME,
               sysdate,
               G_NO,
               U_ID
        from GALLERY
        where G_NO = #{G_NO}
    </insert>

    <!-- 장바구니 목록 -->
    <select id="listCart" resultType="com.member.domain.CartDTO">
        SELECT C_ID, C_HPRICE, C_LPRICE, C_HNAME, C_LNAME, C_REG, G_NO
        FROM USER_CART
        ORDER BY C_ID ASC
    </select>

    <!-- 장바구니 삭제 -->
    <delete id="deleteCart">
        delete
        from user_cart
        where g_no = #{g_no}
    </delete>

    <!-- 장바구니 확인 -->
    <select id="checkCart" resultType="com.member.domain.CartDTO">
        select *
        from user_cart
        where u_id = #{u_id}
          and g_no = #{g_no}
    </select>

    <!-- 마이페이지 총 금액 -->
    <select id="sum" resultType="Integer">
        select sum(O_PRICE)
        from BUY
        where O_SELLER = #{o_seller}
    </select>

    <!-- 마이페이지 구매 판매내역 -->
    <select id="listBuy" resultType="com.member.domain.BuyDTO">
        select o.*, g.G_HNAME
        from BUY o,
             GALLERY g
        where o.G_NO = g.G_NO(+)
          and o.O_BUYER = #{id}
    </select>

    <!-- 갤러리 구매 -->
    <insert id="buyGallery">
        insert into buy(O_NO, O_BUYER, O_SELLER, G_NO, O_PRICE, O_REG)
        select o_no_seq.nextval,
               #{o_buyer},
               U_ID,
               G_NO,
               G_HPRICE,
               sysdate
        from GALLERY
        where G_NO = #{g_no}
    </insert>


</mapper>