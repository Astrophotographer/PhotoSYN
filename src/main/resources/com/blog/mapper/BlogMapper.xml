<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blog.mapper.BlogMapper">

    <insert id="insertTempImg">
        insert into blog_img_temp
        values (#{U_ID}, #{BIT_NAME}, #{BIT_UUID}, #{BIT_ORIGINNAME})
    </insert>

    <select id="getTempImg" resultType="com.blog.domain.Blog_Img_Temp">
        select *
        from blog_img_temp
        where U_ID = #{user_id}
    </select>

    <insert id="insertImg">
        insert into BLOG_IMG (BI_NO, B_NO, BI_NAME, BI_MAIN, BI_UUID, BI_ORIGINNAME)
        values (blog_img_seq.nextval, #{B_NO}, #{BI_NAME}, #{BI_MAIN}, #{BI_UUID}, #{BI_ORIGINNAME})
    </insert>

    <update id="updateImg">
        update BLOG_IMG
        set BI_MAIN = 1
        where BI_UUID = #{uuid}
    </update>

    <delete id="deleteTempImg">
        delete
        from blog_img_temp
        where U_ID = #{u_id}
    </delete>

    <insert id="insertBlog">
        insert into BLOG (B_NO, U_ID, MT_NAME, B_SUBJECT, B_CONTENT, B_TAG1)
        values (blog_seq.nextval, #{U_ID}, #{MT_NAME}, #{B_SUBJECT}, #{B_CONTENT}, #{B_TAG1})
    </insert>

    <select id="checkBlogSeq" resultType="_int">
        select blog_seq.currval
        from dual
    </select>

    <select id="getBlogList" resultType="com.blog.domain.BlogDTO" parameterType="com.blog.domain.Blog_Criteria">
        select * from blog
        <!-- 옵션 수정 전 -->
        <!--        <trim>-->
        <!--            <if test="option_reg != null and (option_reg eq 'latest'.toString())">-->
        <!--                order by B_REGDATE desc-->
        <!--            </if>-->
        <!--            <if test="option_reg != null and (option_reg eq 'oldest'.toString())">-->
        <!--                order by B_REGDATE asc-->
        <!--            </if>-->
        <!--                <if test="option_like != null">-->
        <!--                    <if test="option_like eq 'most'.toString()">-->
        <!--                        order by B_LIKE desc-->
        <!--                    </if>-->
        <!--                </if>-->
        <!--        </trim>-->

        <!-- 유저 메인인 경우 where 문 실행 -->
        <!-- <if test="@com.blog.domain.Blog_Criteria@isNotEmpty(u_id)">-->
        <!--<if test="@com.blog.domain.Blog_Criteria@isNotNull(U_ID)">-->
        <if test='u_id != null'>
            where U_ID = #{u_id}
        </if>
        <choose>
            <when test='option eq "latest".toString()'>
                order by B_REG desc
            </when>
            <when test='option eq "oldest".toString()'>
                order by B_REG asc
            </when>
            <when test='option eq "like".toString()'>
                order by B_LIKE desc, B_REG desc
            </when>
            <when test='option eq "readcount".toString()'>
                order by B_READCOUNT desc, B_REG desc
            </when>
            <otherwise>
                order by B_REG desc
            </otherwise>
        </choose>


        <!-- 수정전 쿼리문 -->
        <!--        <choose>-->
        <!--            &lt;!&ndash; 최신보기(reg) desc - 최신순, asc - 오래된순 &ndash;&gt;-->
        <!--            <when test='option eq "reg".toString()'>-->
        <!--                order by B_REG-->
        <!--                <if test='sort eq "desc".toString()'>-->
        <!--                    desc-->
        <!--                </if>-->
        <!--                <if test='sort eq "asc".toString()'>-->
        <!--                    asc-->
        <!--                </if>-->
        <!--            </when>-->
        <!--            &lt;!&ndash; 좋아요(like) desc - 좋아요 많은순, asc - 좋아요 적은순 &ndash;&gt;-->
        <!--&lt;!&ndash;            <when test='option equals("like")'>&ndash;&gt;-->
        <!--&lt;!&ndash;                order by B_LIKE&ndash;&gt;-->
        <!--&lt;!&ndash;                <if test='sort equals("desc")'>&ndash;&gt;-->
        <!--&lt;!&ndash;                    desc&ndash;&gt;-->
        <!--&lt;!&ndash;                </if>&ndash;&gt;-->
        <!--&lt;!&ndash;                <if test='sort equals("asc")'>&ndash;&gt;-->
        <!--&lt;!&ndash;                    asc&ndash;&gt;-->
        <!--&lt;!&ndash;                </if>&ndash;&gt;-->
        <!--&lt;!&ndash;            </when>&ndash;&gt;-->
        <!--            &lt;!&ndash; 조회순(readcount desc - 조회 많은순, asc - 조회 적은순 &ndash;&gt;-->
        <!--            <when test='option=="readcount"'>-->
        <!--                order by B_READCOUNT-->
        <!--                <if test='sort=="desc"'>-->
        <!--                    desc-->
        <!--                </if>-->
        <!--                <if test='sort=="asc"'>-->
        <!--                    asc-->
        <!--                </if>-->
        <!--            </when>-->
        <!--            &lt;!&ndash; 옵션이 없는 경우 &ndash;&gt;-->
        <!--            <otherwise>-->
        <!--                order by B_REG desc-->
        <!--            </otherwise>-->
        <!--        </choose>-->
    </select>

    <select id="getBlogSingle" resultType="com.blog.domain.BlogDTO">
        select *
        from blog
        where b_no = #{B_NO}
    </select>

    <select id="checkMainImg" resultType="com.blog.domain.Blog_Img">
        select *
        from blog_img
    </select>

    <select id="getMainImg" resultType="com.blog.domain.Blog_Img">
        select *
        from blog_img
        where b_no = #{B_NO}
          and bi_main = 1
    </select>

    <select id="getMainTag" resultType="com.gallery.domain.MaintagDTO">
        select *
        from maintag
    </select>

    <select id="getImg" resultType="com.blog.domain.Blog_Img">
        select *
        from blog_img
        where b_no = #{B_NO}
        order by bi_no desc
    </select>

    <update id="updateBlog">
        update blog
        set b_subject = #{B_SUBJECT},
            b_content = #{B_CONTENT},
            b_tag1    = #{B_TAG1},
            b_edit    = sysdate
        where b_no = #{B_NO}
    </update>

    <delete id="deleteImg">
        delete
        from blog_img
        where bi_uuid = #{uuid}
    </delete>

    <update id="updateBlogMainImg">
        update blog_img
        set bi_main = 0
        where b_no = #{B_NO}
    </update>

    <update id="hideBlog">
        update blog
        set b_status = 1
        where b_no = #{B_NO}
    </update>

    <delete id="deleteImgs">
        delete
        from blog_img
        where b_no = #{B_NO}
    </delete>


</mapper>

